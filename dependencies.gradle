/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
    versions.composeVersion = "1.1.1"
    versions.composeCompilerVersion = "1.2.0"
    versions.appCompatVersion = "1.5.0"
    versions.coroutinesVersion = "1.6.4"
    versions.espressoVersion = "3.4.0"
    versions.gradleVersion = "7.2.0"
    versions.hiltAndroidXVersion = "1.0.0"
    versions.hiltVersion = "2.43.2"
    versions.kotlinVersion = "1.7.0"
    versions.ktxVersion = "1.7.0"
    versions.lifecycleVersion = "2.5.0"
    versions.materialVersion = "1.4.0"
    versions.navigationVersion = "2.5.0"
    versions.roomVersion = "2.5.0-alpha02"
    versions.testExtJunitVersion = "1.1.3"
    versions.retrofitVersion = "2.9.0"
    versions.moshiVersion = "1.14.0"
    versions.okHttpVersion = "4.10.0"
    versions.junitVersion = "5.9.1"
    versions.coreTestingVersion= "2.1.0"
    versions.mockkVersion = "1.12.8"
    versions.testExtJunitVersion = "1.1.3"
    versions.hiltNavComposeVersion = "1.0.0"
    versions.coilVersion = "2.2.1"
    versions.coreLibraryDesugarVersion = "1.1.5"
    versions.playServicesLocationVersion = "20.0.0"
    versions.timber = "5.0.1"
ext.versions = versions

def buildVersions = [:]
    buildVersions.minSdkVersion = 23
    buildVersions.compileSdkVersion = 32
    buildVersions.targetSdkVersion = 32
ext.buildVersions = buildVersions

def deps = [:]

def androidX = [:]
    androidX.lifecycleRuntimeKtx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycleVersion"
    androidX.activityCompose = "androidx.activity:activity-compose:$versions.appCompatVersion"
    androidX.coreKtx = "androidx.core:core-ktx:$versions.ktxVersion"
    androidX.navigation = "androidx.navigation:navigation-compose:$versions.navigationVersion"
    androidX.hiltCompiler = "androidx.hilt:hilt-compiler:$versions.hiltAndroidXVersion"
    androidX.hiltNavigationCompose = "androidx.hilt:hilt-navigation-compose:$versions.hiltNavComposeVersion"

    def compose = [:]
        compose.runtime ="androidx.compose.runtime:runtime:$versions.composeVersion"
        compose.ui ="androidx.compose.ui:ui:$versions.composeVersion"
        compose.foundationLayout ="androidx.compose.foundation:foundation-layout:$versions.composeVersion"
        compose.material="androidx.compose.material:material:$versions.composeVersion"
        compose.materialIconsExtended ="androidx.compose.material:material-icons-extended:$versions.composeVersion"
        compose.foundation ="androidx.compose.foundation:foundation:$versions.composeVersion"
        compose.animation ="androidx.compose.animation:animation:$versions.composeVersion"
        compose.uiTooling ="androidx.compose.ui:ui-tooling:$versions.composeVersion"
        compose.runtimeLivedata ="androidx.compose.runtime:runtime-livedata:$versions.composeVersion"
    androidX.compose = compose

    def room = [:]
        room.runtime = "androidx.room:room-runtime:$versions.roomVersion"
        room.compiler = "androidx.room:room-compiler:$versions.roomVersion"
        room.roomKtx = "androidx.room:room-ktx:$versions.roomVersion"
    androidX.room = room

    def test = [:]
        test.core = "androidx.arch.core:core-testing:$versions.coreTestingVersion"
        test.testExtJunit = "androidx.test.ext:junit:$versions.testExtJunitVersion"
        test.espresso = "androidx.test.espresso:espresso-core:$versions.espressoVersion"
        test.composeJunit4 = "androidx.compose.ui:ui-test-junit4:$versions.composeVersion"
    androidX.test = test

deps.androidX = androidX

def coroutines = [:]
    coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutinesVersion"
    coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"
deps.coroutines = coroutines

def network = [:]
    network.interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okHttpVersion"

    def retrofit = [:]
        retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
        retrofit.moshiConverter = "com.squareup.retrofit2:converter-moshi:$versions.retrofitVersion"
    network.retrofit = retrofit

    def moshi = [:]
        moshi.moshi = "com.squareup.moshi:moshi:$versions.moshiVersion"
        moshi.codegen = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshiVersion"
    network.moshi = moshi

deps.network = network

def dagger = [:]
    dagger.hiltAndroid = "com.google.dagger:hilt-android:$versions.hiltVersion"
    dagger.hiltCompiler = "com.google.dagger:hilt-android-compiler:$versions.hiltVersion"
    dagger.hiltPlugin = "com.google.dagger:hilt-android-gradle-plugin:$versions.hiltVersion"
deps.dagger = dagger

deps.coilCompose = "io.coil-kt:coil-compose:$versions.coilVersion"

deps.junit = "org.junit.jupiter:junit-jupiter:$versions.junitVersion"

deps.mockk = "io.mockk:mockk:$versions.mockkVersion"

deps.coreLibraryDesugaring = "com.android.tools:desugar_jdk_libs:$versions.coreLibraryDesugarVersion"

deps.playServicesLocation = "com.google.android.gms:play-services-location:$versions.playServicesLocationVersion"

deps.timber = "com.jakewharton.timber:timber:$versions.timber"

ext.deps = deps



